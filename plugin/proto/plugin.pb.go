// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	plugin.proto

It has these top-level messages:
	DynamicValue
	Diagnostic
	AttributePath
	Stop
	GetSchema
	ValidateProviderConfig
	ValidateResourceTypeConfig
	ValidateDataSourceConfig
	Configure
	ReadResource
	PlanResourceChange
	ApplyResourceChange
	ImportResourceState
	ReadDataSource
	UpgradeResourceState
	ValidateProvisionerConfig
	ProvisionerApply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Diagnostic_Level int32

const (
	Diagnostic_INVALID Diagnostic_Level = 0
	Diagnostic_ERROR   Diagnostic_Level = 1
	Diagnostic_WARNING Diagnostic_Level = 2
)

var Diagnostic_Level_name = map[int32]string{
	0: "INVALID",
	1: "ERROR",
	2: "WARNING",
}
var Diagnostic_Level_value = map[string]int32{
	"INVALID": 0,
	"ERROR":   1,
	"WARNING": 2,
}

func (x Diagnostic_Level) String() string {
	return proto1.EnumName(Diagnostic_Level_name, int32(x))
}
func (Diagnostic_Level) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type GetSchema_NestingMode int32

const (
	GetSchema_INVALID GetSchema_NestingMode = 0
	GetSchema_SINGLE  GetSchema_NestingMode = 1
	GetSchema_LIST    GetSchema_NestingMode = 2
	GetSchema_SET     GetSchema_NestingMode = 3
	GetSchema_MAP     GetSchema_NestingMode = 4
)

var GetSchema_NestingMode_name = map[int32]string{
	0: "INVALID",
	1: "SINGLE",
	2: "LIST",
	3: "SET",
	4: "MAP",
}
var GetSchema_NestingMode_value = map[string]int32{
	"INVALID": 0,
	"SINGLE":  1,
	"LIST":    2,
	"SET":     3,
	"MAP":     4,
}

func (x GetSchema_NestingMode) String() string {
	return proto1.EnumName(GetSchema_NestingMode_name, int32(x))
}
func (GetSchema_NestingMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

// DynamicValue is an opaque encoding of terraform data, with the field name
// indicating the encoding scheme used.
type DynamicValue struct {
	Msgpack []byte `protobuf:"bytes,1,opt,name=msgpack,proto3" json:"msgpack,omitempty"`
	Json    []byte `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
}

func (m *DynamicValue) Reset()                    { *m = DynamicValue{} }
func (m *DynamicValue) String() string            { return proto1.CompactTextString(m) }
func (*DynamicValue) ProtoMessage()               {}
func (*DynamicValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DynamicValue) GetMsgpack() []byte {
	if m != nil {
		return m.Msgpack
	}
	return nil
}

func (m *DynamicValue) GetJson() []byte {
	if m != nil {
		return m.Json
	}
	return nil
}

type Diagnostic struct {
	Level     Diagnostic_Level `protobuf:"varint,1,opt,name=level,enum=proto.Diagnostic_Level" json:"level,omitempty"`
	Summary   string           `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Detail    string           `protobuf:"bytes,3,opt,name=detail" json:"detail,omitempty"`
	Attribute *AttributePath   `protobuf:"bytes,4,opt,name=attribute" json:"attribute,omitempty"`
}

func (m *Diagnostic) Reset()                    { *m = Diagnostic{} }
func (m *Diagnostic) String() string            { return proto1.CompactTextString(m) }
func (*Diagnostic) ProtoMessage()               {}
func (*Diagnostic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Diagnostic) GetLevel() Diagnostic_Level {
	if m != nil {
		return m.Level
	}
	return Diagnostic_INVALID
}

func (m *Diagnostic) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Diagnostic) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *Diagnostic) GetAttribute() *AttributePath {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type AttributePath struct {
	Steps []*AttributePath_Step `protobuf:"bytes,1,rep,name=steps" json:"steps,omitempty"`
}

func (m *AttributePath) Reset()                    { *m = AttributePath{} }
func (m *AttributePath) String() string            { return proto1.CompactTextString(m) }
func (*AttributePath) ProtoMessage()               {}
func (*AttributePath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AttributePath) GetSteps() []*AttributePath_Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

type AttributePath_Step struct {
	// Types that are valid to be assigned to Selector:
	//	*AttributePath_Step_AttributeName
	//	*AttributePath_Step_ElementKey
	Selector isAttributePath_Step_Selector `protobuf_oneof:"selector"`
}

func (m *AttributePath_Step) Reset()                    { *m = AttributePath_Step{} }
func (m *AttributePath_Step) String() string            { return proto1.CompactTextString(m) }
func (*AttributePath_Step) ProtoMessage()               {}
func (*AttributePath_Step) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type isAttributePath_Step_Selector interface{ isAttributePath_Step_Selector() }

type AttributePath_Step_AttributeName struct {
	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,oneof"`
}
type AttributePath_Step_ElementKey struct {
	ElementKey *DynamicValue `protobuf:"bytes,2,opt,name=element_key,json=elementKey,oneof"`
}

func (*AttributePath_Step_AttributeName) isAttributePath_Step_Selector() {}
func (*AttributePath_Step_ElementKey) isAttributePath_Step_Selector()    {}

func (m *AttributePath_Step) GetSelector() isAttributePath_Step_Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *AttributePath_Step) GetAttributeName() string {
	if x, ok := m.GetSelector().(*AttributePath_Step_AttributeName); ok {
		return x.AttributeName
	}
	return ""
}

func (m *AttributePath_Step) GetElementKey() *DynamicValue {
	if x, ok := m.GetSelector().(*AttributePath_Step_ElementKey); ok {
		return x.ElementKey
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AttributePath_Step) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _AttributePath_Step_OneofMarshaler, _AttributePath_Step_OneofUnmarshaler, _AttributePath_Step_OneofSizer, []interface{}{
		(*AttributePath_Step_AttributeName)(nil),
		(*AttributePath_Step_ElementKey)(nil),
	}
}

func _AttributePath_Step_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*AttributePath_Step)
	// selector
	switch x := m.Selector.(type) {
	case *AttributePath_Step_AttributeName:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.AttributeName)
	case *AttributePath_Step_ElementKey:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.ElementKey); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AttributePath_Step.Selector has unexpected type %T", x)
	}
	return nil
}

func _AttributePath_Step_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*AttributePath_Step)
	switch tag {
	case 1: // selector.attribute_name
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Selector = &AttributePath_Step_AttributeName{x}
		return true, err
	case 2: // selector.element_key
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(DynamicValue)
		err := b.DecodeMessage(msg)
		m.Selector = &AttributePath_Step_ElementKey{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AttributePath_Step_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*AttributePath_Step)
	// selector
	switch x := m.Selector.(type) {
	case *AttributePath_Step_AttributeName:
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.AttributeName)))
		n += len(x.AttributeName)
	case *AttributePath_Step_ElementKey:
		s := proto1.Size(x.ElementKey)
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Stop struct {
}

func (m *Stop) Reset()                    { *m = Stop{} }
func (m *Stop) String() string            { return proto1.CompactTextString(m) }
func (*Stop) ProtoMessage()               {}
func (*Stop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Stop_Request struct {
}

func (m *Stop_Request) Reset()                    { *m = Stop_Request{} }
func (m *Stop_Request) String() string            { return proto1.CompactTextString(m) }
func (*Stop_Request) ProtoMessage()               {}
func (*Stop_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Stop_Response struct {
	Error string `protobuf:"bytes,1,opt,name=Error" json:"Error,omitempty"`
}

func (m *Stop_Response) Reset()                    { *m = Stop_Response{} }
func (m *Stop_Response) String() string            { return proto1.CompactTextString(m) }
func (*Stop_Response) ProtoMessage()               {}
func (*Stop_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 1} }

func (m *Stop_Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetSchema struct {
}

func (m *GetSchema) Reset()                    { *m = GetSchema{} }
func (m *GetSchema) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema) ProtoMessage()               {}
func (*GetSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type GetSchema_Request struct {
}

func (m *GetSchema_Request) Reset()                    { *m = GetSchema_Request{} }
func (m *GetSchema_Request) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema_Request) ProtoMessage()               {}
func (*GetSchema_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type GetSchema_Attribute struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type        []byte `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Required    bool   `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Optional    bool   `protobuf:"varint,5,opt,name=optional" json:"optional,omitempty"`
	Computed    bool   `protobuf:"varint,6,opt,name=computed" json:"computed,omitempty"`
	Sensitive   bool   `protobuf:"varint,7,opt,name=sensitive" json:"sensitive,omitempty"`
}

func (m *GetSchema_Attribute) Reset()                    { *m = GetSchema_Attribute{} }
func (m *GetSchema_Attribute) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema_Attribute) ProtoMessage()               {}
func (*GetSchema_Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 1} }

func (m *GetSchema_Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetSchema_Attribute) GetType() []byte {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *GetSchema_Attribute) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetSchema_Attribute) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *GetSchema_Attribute) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *GetSchema_Attribute) GetComputed() bool {
	if m != nil {
		return m.Computed
	}
	return false
}

func (m *GetSchema_Attribute) GetSensitive() bool {
	if m != nil {
		return m.Sensitive
	}
	return false
}

type GetSchema_Block struct {
	Version    int64                    `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Attributes []*GetSchema_Attribute   `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	BlockTypes []*GetSchema_NestedBlock `protobuf:"bytes,3,rep,name=block_types,json=blockTypes" json:"block_types,omitempty"`
}

func (m *GetSchema_Block) Reset()                    { *m = GetSchema_Block{} }
func (m *GetSchema_Block) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema_Block) ProtoMessage()               {}
func (*GetSchema_Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 2} }

func (m *GetSchema_Block) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetSchema_Block) GetAttributes() []*GetSchema_Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *GetSchema_Block) GetBlockTypes() []*GetSchema_NestedBlock {
	if m != nil {
		return m.BlockTypes
	}
	return nil
}

type GetSchema_NestedBlock struct {
	TypeName string                `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	Block    *GetSchema_Block      `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
	Nesting  GetSchema_NestingMode `protobuf:"varint,3,opt,name=nesting,enum=proto.GetSchema_NestingMode" json:"nesting,omitempty"`
	MinItems int64                 `protobuf:"varint,4,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	MaxItems int64                 `protobuf:"varint,5,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
}

func (m *GetSchema_NestedBlock) Reset()                    { *m = GetSchema_NestedBlock{} }
func (m *GetSchema_NestedBlock) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema_NestedBlock) ProtoMessage()               {}
func (*GetSchema_NestedBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 3} }

func (m *GetSchema_NestedBlock) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *GetSchema_NestedBlock) GetBlock() *GetSchema_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *GetSchema_NestedBlock) GetNesting() GetSchema_NestingMode {
	if m != nil {
		return m.Nesting
	}
	return GetSchema_INVALID
}

func (m *GetSchema_NestedBlock) GetMinItems() int64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *GetSchema_NestedBlock) GetMaxItems() int64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

type GetSchema_Response struct {
	ProviderSchema    *GetSchema_Block            `protobuf:"bytes,1,opt,name=provider_schema,json=providerSchema" json:"provider_schema,omitempty"`
	ResourceSchemas   map[string]*GetSchema_Block `protobuf:"bytes,2,rep,name=resource_schemas,json=resourceSchemas" json:"resource_schemas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DataSourceSchemas map[string]*GetSchema_Block `protobuf:"bytes,3,rep,name=data_source_schemas,json=dataSourceSchemas" json:"data_source_schemas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetSchema_Response) Reset()                    { *m = GetSchema_Response{} }
func (m *GetSchema_Response) String() string            { return proto1.CompactTextString(m) }
func (*GetSchema_Response) ProtoMessage()               {}
func (*GetSchema_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 4} }

func (m *GetSchema_Response) GetProviderSchema() *GetSchema_Block {
	if m != nil {
		return m.ProviderSchema
	}
	return nil
}

func (m *GetSchema_Response) GetResourceSchemas() map[string]*GetSchema_Block {
	if m != nil {
		return m.ResourceSchemas
	}
	return nil
}

func (m *GetSchema_Response) GetDataSourceSchemas() map[string]*GetSchema_Block {
	if m != nil {
		return m.DataSourceSchemas
	}
	return nil
}

type ValidateProviderConfig struct {
}

func (m *ValidateProviderConfig) Reset()                    { *m = ValidateProviderConfig{} }
func (m *ValidateProviderConfig) String() string            { return proto1.CompactTextString(m) }
func (*ValidateProviderConfig) ProtoMessage()               {}
func (*ValidateProviderConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ValidateProviderConfig_Request struct {
	Config *DynamicValue `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *ValidateProviderConfig_Request) Reset()         { *m = ValidateProviderConfig_Request{} }
func (m *ValidateProviderConfig_Request) String() string { return proto1.CompactTextString(m) }
func (*ValidateProviderConfig_Request) ProtoMessage()    {}
func (*ValidateProviderConfig_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *ValidateProviderConfig_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type ValidateProviderConfig_Response struct {
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ValidateProviderConfig_Response) Reset()         { *m = ValidateProviderConfig_Response{} }
func (m *ValidateProviderConfig_Response) String() string { return proto1.CompactTextString(m) }
func (*ValidateProviderConfig_Response) ProtoMessage()    {}
func (*ValidateProviderConfig_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1}
}

func (m *ValidateProviderConfig_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ValidateResourceTypeConfig struct {
}

func (m *ValidateResourceTypeConfig) Reset()                    { *m = ValidateResourceTypeConfig{} }
func (m *ValidateResourceTypeConfig) String() string            { return proto1.CompactTextString(m) }
func (*ValidateResourceTypeConfig) ProtoMessage()               {}
func (*ValidateResourceTypeConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ValidateResourceTypeConfig_Request struct {
	ResourceTypeName string        `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	Config           *DynamicValue `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
}

func (m *ValidateResourceTypeConfig_Request) Reset()         { *m = ValidateResourceTypeConfig_Request{} }
func (m *ValidateResourceTypeConfig_Request) String() string { return proto1.CompactTextString(m) }
func (*ValidateResourceTypeConfig_Request) ProtoMessage()    {}
func (*ValidateResourceTypeConfig_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

func (m *ValidateResourceTypeConfig_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *ValidateResourceTypeConfig_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type ValidateResourceTypeConfig_Response struct {
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ValidateResourceTypeConfig_Response) Reset()         { *m = ValidateResourceTypeConfig_Response{} }
func (m *ValidateResourceTypeConfig_Response) String() string { return proto1.CompactTextString(m) }
func (*ValidateResourceTypeConfig_Response) ProtoMessage()    {}
func (*ValidateResourceTypeConfig_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 1}
}

func (m *ValidateResourceTypeConfig_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ValidateDataSourceConfig struct {
}

func (m *ValidateDataSourceConfig) Reset()                    { *m = ValidateDataSourceConfig{} }
func (m *ValidateDataSourceConfig) String() string            { return proto1.CompactTextString(m) }
func (*ValidateDataSourceConfig) ProtoMessage()               {}
func (*ValidateDataSourceConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ValidateDataSourceConfig_Request struct {
	DataSourceName string        `protobuf:"bytes,1,opt,name=data_source_name,json=dataSourceName" json:"data_source_name,omitempty"`
	Config         *DynamicValue `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
}

func (m *ValidateDataSourceConfig_Request) Reset()         { *m = ValidateDataSourceConfig_Request{} }
func (m *ValidateDataSourceConfig_Request) String() string { return proto1.CompactTextString(m) }
func (*ValidateDataSourceConfig_Request) ProtoMessage()    {}
func (*ValidateDataSourceConfig_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

func (m *ValidateDataSourceConfig_Request) GetDataSourceName() string {
	if m != nil {
		return m.DataSourceName
	}
	return ""
}

func (m *ValidateDataSourceConfig_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type ValidateDataSourceConfig_Response struct {
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ValidateDataSourceConfig_Response) Reset()         { *m = ValidateDataSourceConfig_Response{} }
func (m *ValidateDataSourceConfig_Response) String() string { return proto1.CompactTextString(m) }
func (*ValidateDataSourceConfig_Response) ProtoMessage()    {}
func (*ValidateDataSourceConfig_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 1}
}

func (m *ValidateDataSourceConfig_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type Configure struct {
}

func (m *Configure) Reset()                    { *m = Configure{} }
func (m *Configure) String() string            { return proto1.CompactTextString(m) }
func (*Configure) ProtoMessage()               {}
func (*Configure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type Configure_Request struct {
	TerraformVersion string        `protobuf:"bytes,1,opt,name=terraform_version,json=terraformVersion" json:"terraform_version,omitempty"`
	Config           *DynamicValue `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
}

func (m *Configure_Request) Reset()                    { *m = Configure_Request{} }
func (m *Configure_Request) String() string            { return proto1.CompactTextString(m) }
func (*Configure_Request) ProtoMessage()               {}
func (*Configure_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *Configure_Request) GetTerraformVersion() string {
	if m != nil {
		return m.TerraformVersion
	}
	return ""
}

func (m *Configure_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type Configure_Response struct {
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *Configure_Response) Reset()                    { *m = Configure_Response{} }
func (m *Configure_Response) String() string            { return proto1.CompactTextString(m) }
func (*Configure_Response) ProtoMessage()               {}
func (*Configure_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 1} }

func (m *Configure_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ReadResource struct {
}

func (m *ReadResource) Reset()                    { *m = ReadResource{} }
func (m *ReadResource) String() string            { return proto1.CompactTextString(m) }
func (*ReadResource) ProtoMessage()               {}
func (*ReadResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type ReadResource_Request struct {
	ResourceTypeName string        `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	CurrentState     *DynamicValue `protobuf:"bytes,2,opt,name=current_state,json=currentState" json:"current_state,omitempty"`
}

func (m *ReadResource_Request) Reset()                    { *m = ReadResource_Request{} }
func (m *ReadResource_Request) String() string            { return proto1.CompactTextString(m) }
func (*ReadResource_Request) ProtoMessage()               {}
func (*ReadResource_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *ReadResource_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *ReadResource_Request) GetCurrentState() *DynamicValue {
	if m != nil {
		return m.CurrentState
	}
	return nil
}

type ReadResource_Response struct {
	NewState    *DynamicValue `protobuf:"bytes,1,opt,name=new_state,json=newState" json:"new_state,omitempty"`
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ReadResource_Response) Reset()                    { *m = ReadResource_Response{} }
func (m *ReadResource_Response) String() string            { return proto1.CompactTextString(m) }
func (*ReadResource_Response) ProtoMessage()               {}
func (*ReadResource_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 1} }

func (m *ReadResource_Response) GetNewState() *DynamicValue {
	if m != nil {
		return m.NewState
	}
	return nil
}

func (m *ReadResource_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type PlanResourceChange struct {
}

func (m *PlanResourceChange) Reset()                    { *m = PlanResourceChange{} }
func (m *PlanResourceChange) String() string            { return proto1.CompactTextString(m) }
func (*PlanResourceChange) ProtoMessage()               {}
func (*PlanResourceChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type PlanResourceChange_Request struct {
	ResourceTypeName string        `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	PriorState       *DynamicValue `protobuf:"bytes,2,opt,name=prior_state,json=priorState" json:"prior_state,omitempty"`
	ProposedNewState *DynamicValue `protobuf:"bytes,3,opt,name=proposed_new_state,json=proposedNewState" json:"proposed_new_state,omitempty"`
	Extra            *DynamicValue `protobuf:"bytes,4,opt,name=extra" json:"extra,omitempty"`
}

func (m *PlanResourceChange_Request) Reset()                    { *m = PlanResourceChange_Request{} }
func (m *PlanResourceChange_Request) String() string            { return proto1.CompactTextString(m) }
func (*PlanResourceChange_Request) ProtoMessage()               {}
func (*PlanResourceChange_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *PlanResourceChange_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *PlanResourceChange_Request) GetPriorState() *DynamicValue {
	if m != nil {
		return m.PriorState
	}
	return nil
}

func (m *PlanResourceChange_Request) GetProposedNewState() *DynamicValue {
	if m != nil {
		return m.ProposedNewState
	}
	return nil
}

func (m *PlanResourceChange_Request) GetExtra() *DynamicValue {
	if m != nil {
		return m.Extra
	}
	return nil
}

type PlanResourceChange_Response struct {
	PlannedNewState *DynamicValue    `protobuf:"bytes,1,opt,name=planned_new_state,json=plannedNewState" json:"planned_new_state,omitempty"`
	RequiresReplace []*AttributePath `protobuf:"bytes,2,rep,name=requires_replace,json=requiresReplace" json:"requires_replace,omitempty"`
	Extra           *DynamicValue    `protobuf:"bytes,3,opt,name=extra" json:"extra,omitempty"`
	Diagnostics     []*Diagnostic    `protobuf:"bytes,4,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *PlanResourceChange_Response) Reset()                    { *m = PlanResourceChange_Response{} }
func (m *PlanResourceChange_Response) String() string            { return proto1.CompactTextString(m) }
func (*PlanResourceChange_Response) ProtoMessage()               {}
func (*PlanResourceChange_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

func (m *PlanResourceChange_Response) GetPlannedNewState() *DynamicValue {
	if m != nil {
		return m.PlannedNewState
	}
	return nil
}

func (m *PlanResourceChange_Response) GetRequiresReplace() []*AttributePath {
	if m != nil {
		return m.RequiresReplace
	}
	return nil
}

func (m *PlanResourceChange_Response) GetExtra() *DynamicValue {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *PlanResourceChange_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ApplyResourceChange struct {
}

func (m *ApplyResourceChange) Reset()                    { *m = ApplyResourceChange{} }
func (m *ApplyResourceChange) String() string            { return proto1.CompactTextString(m) }
func (*ApplyResourceChange) ProtoMessage()               {}
func (*ApplyResourceChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type ApplyResourceChange_Request struct {
	ResourceTypeName string        `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	PriorState       *DynamicValue `protobuf:"bytes,2,opt,name=prior_state,json=priorState" json:"prior_state,omitempty"`
	PlannedNewState  *DynamicValue `protobuf:"bytes,3,opt,name=planned_new_state,json=plannedNewState" json:"planned_new_state,omitempty"`
	Extra            []byte        `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (m *ApplyResourceChange_Request) Reset()                    { *m = ApplyResourceChange_Request{} }
func (m *ApplyResourceChange_Request) String() string            { return proto1.CompactTextString(m) }
func (*ApplyResourceChange_Request) ProtoMessage()               {}
func (*ApplyResourceChange_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func (m *ApplyResourceChange_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *ApplyResourceChange_Request) GetPriorState() *DynamicValue {
	if m != nil {
		return m.PriorState
	}
	return nil
}

func (m *ApplyResourceChange_Request) GetPlannedNewState() *DynamicValue {
	if m != nil {
		return m.PlannedNewState
	}
	return nil
}

func (m *ApplyResourceChange_Request) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

type ApplyResourceChange_Response struct {
	NewState    []byte            `protobuf:"bytes,1,opt,name=new_state,json=newState,proto3" json:"new_state,omitempty"`
	Extra       []byte            `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
	Connection  map[string]string `protobuf:"bytes,3,rep,name=connection" json:"connection,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Diagnostics []*Diagnostic     `protobuf:"bytes,4,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ApplyResourceChange_Response) Reset()         { *m = ApplyResourceChange_Response{} }
func (m *ApplyResourceChange_Response) String() string { return proto1.CompactTextString(m) }
func (*ApplyResourceChange_Response) ProtoMessage()    {}
func (*ApplyResourceChange_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 1}
}

func (m *ApplyResourceChange_Response) GetNewState() []byte {
	if m != nil {
		return m.NewState
	}
	return nil
}

func (m *ApplyResourceChange_Response) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *ApplyResourceChange_Response) GetConnection() map[string]string {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *ApplyResourceChange_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ImportResourceState struct {
}

func (m *ImportResourceState) Reset()                    { *m = ImportResourceState{} }
func (m *ImportResourceState) String() string            { return proto1.CompactTextString(m) }
func (*ImportResourceState) ProtoMessage()               {}
func (*ImportResourceState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type ImportResourceState_Request struct {
	ResourceTypeName string `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	Id               string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *ImportResourceState_Request) Reset()                    { *m = ImportResourceState_Request{} }
func (m *ImportResourceState_Request) String() string            { return proto1.CompactTextString(m) }
func (*ImportResourceState_Request) ProtoMessage()               {}
func (*ImportResourceState_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

func (m *ImportResourceState_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *ImportResourceState_Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ImportResourceState_Response struct {
	NewState    *DynamicValue `protobuf:"bytes,2,opt,name=new_state,json=newState" json:"new_state,omitempty"`
	Diagnostics []*Diagnostic `protobuf:"bytes,3,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ImportResourceState_Response) Reset()         { *m = ImportResourceState_Response{} }
func (m *ImportResourceState_Response) String() string { return proto1.CompactTextString(m) }
func (*ImportResourceState_Response) ProtoMessage()    {}
func (*ImportResourceState_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 1}
}

func (m *ImportResourceState_Response) GetNewState() *DynamicValue {
	if m != nil {
		return m.NewState
	}
	return nil
}

func (m *ImportResourceState_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ReadDataSource struct {
}

func (m *ReadDataSource) Reset()                    { *m = ReadDataSource{} }
func (m *ReadDataSource) String() string            { return proto1.CompactTextString(m) }
func (*ReadDataSource) ProtoMessage()               {}
func (*ReadDataSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type ReadDataSource_Request struct {
	DataSourceName string        `protobuf:"bytes,1,opt,name=data_source_name,json=dataSourceName" json:"data_source_name,omitempty"`
	Request        *DynamicValue `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
}

func (m *ReadDataSource_Request) Reset()                    { *m = ReadDataSource_Request{} }
func (m *ReadDataSource_Request) String() string            { return proto1.CompactTextString(m) }
func (*ReadDataSource_Request) ProtoMessage()               {}
func (*ReadDataSource_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

func (m *ReadDataSource_Request) GetDataSourceName() string {
	if m != nil {
		return m.DataSourceName
	}
	return ""
}

func (m *ReadDataSource_Request) GetRequest() *DynamicValue {
	if m != nil {
		return m.Request
	}
	return nil
}

type ReadDataSource_Response struct {
	Result      *DynamicValue `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Diagnostics []*Diagnostic `protobuf:"bytes,3,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ReadDataSource_Response) Reset()                    { *m = ReadDataSource_Response{} }
func (m *ReadDataSource_Response) String() string            { return proto1.CompactTextString(m) }
func (*ReadDataSource_Response) ProtoMessage()               {}
func (*ReadDataSource_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 1} }

func (m *ReadDataSource_Response) GetResult() *DynamicValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ReadDataSource_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type UpgradeResourceState struct {
}

func (m *UpgradeResourceState) Reset()                    { *m = UpgradeResourceState{} }
func (m *UpgradeResourceState) String() string            { return proto1.CompactTextString(m) }
func (*UpgradeResourceState) ProtoMessage()               {}
func (*UpgradeResourceState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type UpgradeResourceState_Request struct {
	ResourceTypeName string `protobuf:"bytes,1,opt,name=resource_type_name,json=resourceTypeName" json:"resource_type_name,omitempty"`
	// prior_version is the schema_version number recorded in the state file
	PriorVersion uint64 `protobuf:"varint,2,opt,name=prior_version,json=priorVersion" json:"prior_version,omitempty"`
	// prior_state_raw is a msgpack-encoded version of the value data structure
	// recorded in the state file without any prior validation or normalization.
	// Core does not have access to the schema of prior_version, so it's the
	// provider's responsibility to interpret this value using the appropriate
	// older schema.
	PriorStateRaw *DynamicValue `protobuf:"bytes,3,opt,name=prior_state_raw,json=priorStateRaw" json:"prior_state_raw,omitempty"`
}

func (m *UpgradeResourceState_Request) Reset()         { *m = UpgradeResourceState_Request{} }
func (m *UpgradeResourceState_Request) String() string { return proto1.CompactTextString(m) }
func (*UpgradeResourceState_Request) ProtoMessage()    {}
func (*UpgradeResourceState_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

func (m *UpgradeResourceState_Request) GetResourceTypeName() string {
	if m != nil {
		return m.ResourceTypeName
	}
	return ""
}

func (m *UpgradeResourceState_Request) GetPriorVersion() uint64 {
	if m != nil {
		return m.PriorVersion
	}
	return 0
}

func (m *UpgradeResourceState_Request) GetPriorStateRaw() *DynamicValue {
	if m != nil {
		return m.PriorStateRaw
	}
	return nil
}

type UpgradeResourceState_Response struct {
	// new_state is a msgpack-encoded data structure that, when interpreted with
	// the _current_ schema for this resource type, is functionally equivalent to
	// that which was given in prior_state_raw.
	NewState *DynamicValue `protobuf:"bytes,1,opt,name=new_state,json=newState" json:"new_state,omitempty"`
	// diagnostics describes any errors encountered during migration that could not
	// be safely resolved, and warnings about any possibly-risky assumptions made
	// in the upgrade process.
	Diagnostics []*Diagnostic `protobuf:"bytes,2,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *UpgradeResourceState_Response) Reset()         { *m = UpgradeResourceState_Response{} }
func (m *UpgradeResourceState_Response) String() string { return proto1.CompactTextString(m) }
func (*UpgradeResourceState_Response) ProtoMessage()    {}
func (*UpgradeResourceState_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 1}
}

func (m *UpgradeResourceState_Response) GetNewState() *DynamicValue {
	if m != nil {
		return m.NewState
	}
	return nil
}

func (m *UpgradeResourceState_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ValidateProvisionerConfig struct {
}

func (m *ValidateProvisionerConfig) Reset()                    { *m = ValidateProvisionerConfig{} }
func (m *ValidateProvisionerConfig) String() string            { return proto1.CompactTextString(m) }
func (*ValidateProvisionerConfig) ProtoMessage()               {}
func (*ValidateProvisionerConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type ValidateProvisionerConfig_Request struct {
	Config *DynamicValue `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *ValidateProvisionerConfig_Request) Reset()         { *m = ValidateProvisionerConfig_Request{} }
func (m *ValidateProvisionerConfig_Request) String() string { return proto1.CompactTextString(m) }
func (*ValidateProvisionerConfig_Request) ProtoMessage()    {}
func (*ValidateProvisionerConfig_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 0}
}

func (m *ValidateProvisionerConfig_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type ValidateProvisionerConfig_Response struct {
	Diagnostics []*Diagnostic `protobuf:"bytes,15,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *ValidateProvisionerConfig_Response) Reset()         { *m = ValidateProvisionerConfig_Response{} }
func (m *ValidateProvisionerConfig_Response) String() string { return proto1.CompactTextString(m) }
func (*ValidateProvisionerConfig_Response) ProtoMessage()    {}
func (*ValidateProvisionerConfig_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 1}
}

func (m *ValidateProvisionerConfig_Response) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

type ProvisionerApply struct {
}

func (m *ProvisionerApply) Reset()                    { *m = ProvisionerApply{} }
func (m *ProvisionerApply) String() string            { return proto1.CompactTextString(m) }
func (*ProvisionerApply) ProtoMessage()               {}
func (*ProvisionerApply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type ProvisionerApply_Request struct {
	Config *DynamicValue `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *ProvisionerApply_Request) Reset()                    { *m = ProvisionerApply_Request{} }
func (m *ProvisionerApply_Request) String() string            { return proto1.CompactTextString(m) }
func (*ProvisionerApply_Request) ProtoMessage()               {}
func (*ProvisionerApply_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

func (m *ProvisionerApply_Request) GetConfig() *DynamicValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type ProvisionerApply_Response struct {
	Output string `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
}

func (m *ProvisionerApply_Response) Reset()                    { *m = ProvisionerApply_Response{} }
func (m *ProvisionerApply_Response) String() string            { return proto1.CompactTextString(m) }
func (*ProvisionerApply_Response) ProtoMessage()               {}
func (*ProvisionerApply_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 1} }

func (m *ProvisionerApply_Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto1.RegisterType((*DynamicValue)(nil), "proto.DynamicValue")
	proto1.RegisterType((*Diagnostic)(nil), "proto.Diagnostic")
	proto1.RegisterType((*AttributePath)(nil), "proto.AttributePath")
	proto1.RegisterType((*AttributePath_Step)(nil), "proto.AttributePath.Step")
	proto1.RegisterType((*Stop)(nil), "proto.Stop")
	proto1.RegisterType((*Stop_Request)(nil), "proto.Stop.Request")
	proto1.RegisterType((*Stop_Response)(nil), "proto.Stop.Response")
	proto1.RegisterType((*GetSchema)(nil), "proto.GetSchema")
	proto1.RegisterType((*GetSchema_Request)(nil), "proto.GetSchema.Request")
	proto1.RegisterType((*GetSchema_Attribute)(nil), "proto.GetSchema.Attribute")
	proto1.RegisterType((*GetSchema_Block)(nil), "proto.GetSchema.Block")
	proto1.RegisterType((*GetSchema_NestedBlock)(nil), "proto.GetSchema.NestedBlock")
	proto1.RegisterType((*GetSchema_Response)(nil), "proto.GetSchema.Response")
	proto1.RegisterType((*ValidateProviderConfig)(nil), "proto.ValidateProviderConfig")
	proto1.RegisterType((*ValidateProviderConfig_Request)(nil), "proto.ValidateProviderConfig.Request")
	proto1.RegisterType((*ValidateProviderConfig_Response)(nil), "proto.ValidateProviderConfig.Response")
	proto1.RegisterType((*ValidateResourceTypeConfig)(nil), "proto.ValidateResourceTypeConfig")
	proto1.RegisterType((*ValidateResourceTypeConfig_Request)(nil), "proto.ValidateResourceTypeConfig.Request")
	proto1.RegisterType((*ValidateResourceTypeConfig_Response)(nil), "proto.ValidateResourceTypeConfig.Response")
	proto1.RegisterType((*ValidateDataSourceConfig)(nil), "proto.ValidateDataSourceConfig")
	proto1.RegisterType((*ValidateDataSourceConfig_Request)(nil), "proto.ValidateDataSourceConfig.Request")
	proto1.RegisterType((*ValidateDataSourceConfig_Response)(nil), "proto.ValidateDataSourceConfig.Response")
	proto1.RegisterType((*Configure)(nil), "proto.Configure")
	proto1.RegisterType((*Configure_Request)(nil), "proto.Configure.Request")
	proto1.RegisterType((*Configure_Response)(nil), "proto.Configure.Response")
	proto1.RegisterType((*ReadResource)(nil), "proto.ReadResource")
	proto1.RegisterType((*ReadResource_Request)(nil), "proto.ReadResource.Request")
	proto1.RegisterType((*ReadResource_Response)(nil), "proto.ReadResource.Response")
	proto1.RegisterType((*PlanResourceChange)(nil), "proto.PlanResourceChange")
	proto1.RegisterType((*PlanResourceChange_Request)(nil), "proto.PlanResourceChange.Request")
	proto1.RegisterType((*PlanResourceChange_Response)(nil), "proto.PlanResourceChange.Response")
	proto1.RegisterType((*ApplyResourceChange)(nil), "proto.ApplyResourceChange")
	proto1.RegisterType((*ApplyResourceChange_Request)(nil), "proto.ApplyResourceChange.Request")
	proto1.RegisterType((*ApplyResourceChange_Response)(nil), "proto.ApplyResourceChange.Response")
	proto1.RegisterType((*ImportResourceState)(nil), "proto.ImportResourceState")
	proto1.RegisterType((*ImportResourceState_Request)(nil), "proto.ImportResourceState.Request")
	proto1.RegisterType((*ImportResourceState_Response)(nil), "proto.ImportResourceState.Response")
	proto1.RegisterType((*ReadDataSource)(nil), "proto.ReadDataSource")
	proto1.RegisterType((*ReadDataSource_Request)(nil), "proto.ReadDataSource.Request")
	proto1.RegisterType((*ReadDataSource_Response)(nil), "proto.ReadDataSource.Response")
	proto1.RegisterType((*UpgradeResourceState)(nil), "proto.UpgradeResourceState")
	proto1.RegisterType((*UpgradeResourceState_Request)(nil), "proto.UpgradeResourceState.Request")
	proto1.RegisterType((*UpgradeResourceState_Response)(nil), "proto.UpgradeResourceState.Response")
	proto1.RegisterType((*ValidateProvisionerConfig)(nil), "proto.ValidateProvisionerConfig")
	proto1.RegisterType((*ValidateProvisionerConfig_Request)(nil), "proto.ValidateProvisionerConfig.Request")
	proto1.RegisterType((*ValidateProvisionerConfig_Response)(nil), "proto.ValidateProvisionerConfig.Response")
	proto1.RegisterType((*ProvisionerApply)(nil), "proto.ProvisionerApply")
	proto1.RegisterType((*ProvisionerApply_Request)(nil), "proto.ProvisionerApply.Request")
	proto1.RegisterType((*ProvisionerApply_Response)(nil), "proto.ProvisionerApply.Response")
	proto1.RegisterEnum("proto.Diagnostic_Level", Diagnostic_Level_name, Diagnostic_Level_value)
	proto1.RegisterEnum("proto.GetSchema_NestingMode", GetSchema_NestingMode_name, GetSchema_NestingMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Provider service

type ProviderClient interface {
	// ////// Information about what a provider supports/expects
	GetSchema(ctx context.Context, in *GetSchema_Request, opts ...grpc.CallOption) (*GetSchema_Response, error)
	ValidateProviderConfig(ctx context.Context, in *ValidateProviderConfig_Request, opts ...grpc.CallOption) (*ValidateProviderConfig_Response, error)
	ValidateResourceTypeConfig(ctx context.Context, in *ValidateResourceTypeConfig_Request, opts ...grpc.CallOption) (*ValidateResourceTypeConfig_Response, error)
	ValidateDataSourceConfig(ctx context.Context, in *ValidateDataSourceConfig_Request, opts ...grpc.CallOption) (*ValidateDataSourceConfig_Response, error)
	UpgradeResourceState(ctx context.Context, in *UpgradeResourceState_Request, opts ...grpc.CallOption) (*UpgradeResourceState_Response, error)
	// ////// One-time initialization, called before other functions below
	Configure(ctx context.Context, in *Configure_Request, opts ...grpc.CallOption) (*Configure_Response, error)
	// ////// Managed Resource Lifecycle
	ReadResource(ctx context.Context, in *ReadResource_Request, opts ...grpc.CallOption) (*ReadResource_Response, error)
	PlanResourceChange(ctx context.Context, in *PlanResourceChange_Request, opts ...grpc.CallOption) (*PlanResourceChange_Response, error)
	ApplyResourceChange(ctx context.Context, in *ApplyResourceChange_Request, opts ...grpc.CallOption) (*ApplyResourceChange_Response, error)
	ImportResourceState(ctx context.Context, in *ImportResourceState_Request, opts ...grpc.CallOption) (*ImportResourceState_Response, error)
	ReadDataSource(ctx context.Context, in *ReadDataSource_Request, opts ...grpc.CallOption) (*ReadDataSource_Response, error)
	// ////// Graceful Shutdown
	Stop(ctx context.Context, in *Stop_Request, opts ...grpc.CallOption) (*Stop_Response, error)
}

type providerClient struct {
	cc *grpc.ClientConn
}

func NewProviderClient(cc *grpc.ClientConn) ProviderClient {
	return &providerClient{cc}
}

func (c *providerClient) GetSchema(ctx context.Context, in *GetSchema_Request, opts ...grpc.CallOption) (*GetSchema_Response, error) {
	out := new(GetSchema_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/GetSchema", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ValidateProviderConfig(ctx context.Context, in *ValidateProviderConfig_Request, opts ...grpc.CallOption) (*ValidateProviderConfig_Response, error) {
	out := new(ValidateProviderConfig_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ValidateProviderConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ValidateResourceTypeConfig(ctx context.Context, in *ValidateResourceTypeConfig_Request, opts ...grpc.CallOption) (*ValidateResourceTypeConfig_Response, error) {
	out := new(ValidateResourceTypeConfig_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ValidateResourceTypeConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ValidateDataSourceConfig(ctx context.Context, in *ValidateDataSourceConfig_Request, opts ...grpc.CallOption) (*ValidateDataSourceConfig_Response, error) {
	out := new(ValidateDataSourceConfig_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ValidateDataSourceConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) UpgradeResourceState(ctx context.Context, in *UpgradeResourceState_Request, opts ...grpc.CallOption) (*UpgradeResourceState_Response, error) {
	out := new(UpgradeResourceState_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/UpgradeResourceState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Configure(ctx context.Context, in *Configure_Request, opts ...grpc.CallOption) (*Configure_Response, error) {
	out := new(Configure_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ReadResource(ctx context.Context, in *ReadResource_Request, opts ...grpc.CallOption) (*ReadResource_Response, error) {
	out := new(ReadResource_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ReadResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) PlanResourceChange(ctx context.Context, in *PlanResourceChange_Request, opts ...grpc.CallOption) (*PlanResourceChange_Response, error) {
	out := new(PlanResourceChange_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/PlanResourceChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ApplyResourceChange(ctx context.Context, in *ApplyResourceChange_Request, opts ...grpc.CallOption) (*ApplyResourceChange_Response, error) {
	out := new(ApplyResourceChange_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ApplyResourceChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ImportResourceState(ctx context.Context, in *ImportResourceState_Request, opts ...grpc.CallOption) (*ImportResourceState_Response, error) {
	out := new(ImportResourceState_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ImportResourceState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) ReadDataSource(ctx context.Context, in *ReadDataSource_Request, opts ...grpc.CallOption) (*ReadDataSource_Response, error) {
	out := new(ReadDataSource_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/ReadDataSource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Stop(ctx context.Context, in *Stop_Request, opts ...grpc.CallOption) (*Stop_Response, error) {
	out := new(Stop_Response)
	err := grpc.Invoke(ctx, "/proto.Provider/Stop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Provider service

type ProviderServer interface {
	// ////// Information about what a provider supports/expects
	GetSchema(context.Context, *GetSchema_Request) (*GetSchema_Response, error)
	ValidateProviderConfig(context.Context, *ValidateProviderConfig_Request) (*ValidateProviderConfig_Response, error)
	ValidateResourceTypeConfig(context.Context, *ValidateResourceTypeConfig_Request) (*ValidateResourceTypeConfig_Response, error)
	ValidateDataSourceConfig(context.Context, *ValidateDataSourceConfig_Request) (*ValidateDataSourceConfig_Response, error)
	UpgradeResourceState(context.Context, *UpgradeResourceState_Request) (*UpgradeResourceState_Response, error)
	// ////// One-time initialization, called before other functions below
	Configure(context.Context, *Configure_Request) (*Configure_Response, error)
	// ////// Managed Resource Lifecycle
	ReadResource(context.Context, *ReadResource_Request) (*ReadResource_Response, error)
	PlanResourceChange(context.Context, *PlanResourceChange_Request) (*PlanResourceChange_Response, error)
	ApplyResourceChange(context.Context, *ApplyResourceChange_Request) (*ApplyResourceChange_Response, error)
	ImportResourceState(context.Context, *ImportResourceState_Request) (*ImportResourceState_Response, error)
	ReadDataSource(context.Context, *ReadDataSource_Request) (*ReadDataSource_Response, error)
	// ////// Graceful Shutdown
	Stop(context.Context, *Stop_Request) (*Stop_Response, error)
}

func RegisterProviderServer(s *grpc.Server, srv ProviderServer) {
	s.RegisterService(&_Provider_serviceDesc, srv)
}

func _Provider_GetSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchema_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).GetSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/GetSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).GetSchema(ctx, req.(*GetSchema_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ValidateProviderConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateProviderConfig_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ValidateProviderConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ValidateProviderConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ValidateProviderConfig(ctx, req.(*ValidateProviderConfig_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ValidateResourceTypeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateResourceTypeConfig_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ValidateResourceTypeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ValidateResourceTypeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ValidateResourceTypeConfig(ctx, req.(*ValidateResourceTypeConfig_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ValidateDataSourceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateDataSourceConfig_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ValidateDataSourceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ValidateDataSourceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ValidateDataSourceConfig(ctx, req.(*ValidateDataSourceConfig_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_UpgradeResourceState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeResourceState_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).UpgradeResourceState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/UpgradeResourceState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).UpgradeResourceState(ctx, req.(*UpgradeResourceState_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Configure_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Configure(ctx, req.(*Configure_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ReadResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadResource_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ReadResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ReadResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ReadResource(ctx, req.(*ReadResource_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_PlanResourceChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlanResourceChange_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).PlanResourceChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/PlanResourceChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).PlanResourceChange(ctx, req.(*PlanResourceChange_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ApplyResourceChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyResourceChange_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ApplyResourceChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ApplyResourceChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ApplyResourceChange(ctx, req.(*ApplyResourceChange_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ImportResourceState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportResourceState_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ImportResourceState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ImportResourceState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ImportResourceState(ctx, req.(*ImportResourceState_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_ReadDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadDataSource_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).ReadDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/ReadDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).ReadDataSource(ctx, req.(*ReadDataSource_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stop_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provider/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Stop(ctx, req.(*Stop_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Provider",
	HandlerType: (*ProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSchema",
			Handler:    _Provider_GetSchema_Handler,
		},
		{
			MethodName: "ValidateProviderConfig",
			Handler:    _Provider_ValidateProviderConfig_Handler,
		},
		{
			MethodName: "ValidateResourceTypeConfig",
			Handler:    _Provider_ValidateResourceTypeConfig_Handler,
		},
		{
			MethodName: "ValidateDataSourceConfig",
			Handler:    _Provider_ValidateDataSourceConfig_Handler,
		},
		{
			MethodName: "UpgradeResourceState",
			Handler:    _Provider_UpgradeResourceState_Handler,
		},
		{
			MethodName: "Configure",
			Handler:    _Provider_Configure_Handler,
		},
		{
			MethodName: "ReadResource",
			Handler:    _Provider_ReadResource_Handler,
		},
		{
			MethodName: "PlanResourceChange",
			Handler:    _Provider_PlanResourceChange_Handler,
		},
		{
			MethodName: "ApplyResourceChange",
			Handler:    _Provider_ApplyResourceChange_Handler,
		},
		{
			MethodName: "ImportResourceState",
			Handler:    _Provider_ImportResourceState_Handler,
		},
		{
			MethodName: "ReadDataSource",
			Handler:    _Provider_ReadDataSource_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Provider_Stop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugin.proto",
}

// Client API for Provisioner service

type ProvisionerClient interface {
	ValidateProvisionerConfig(ctx context.Context, in *ValidateProvisionerConfig_Request, opts ...grpc.CallOption) (*ValidateProvisionerConfig_Response, error)
	Apply(ctx context.Context, in *ProvisionerApply_Request, opts ...grpc.CallOption) (Provisioner_ApplyClient, error)
	Stop(ctx context.Context, in *Stop_Request, opts ...grpc.CallOption) (*Stop_Response, error)
}

type provisionerClient struct {
	cc *grpc.ClientConn
}

func NewProvisionerClient(cc *grpc.ClientConn) ProvisionerClient {
	return &provisionerClient{cc}
}

func (c *provisionerClient) ValidateProvisionerConfig(ctx context.Context, in *ValidateProvisionerConfig_Request, opts ...grpc.CallOption) (*ValidateProvisionerConfig_Response, error) {
	out := new(ValidateProvisionerConfig_Response)
	err := grpc.Invoke(ctx, "/proto.Provisioner/ValidateProvisionerConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provisionerClient) Apply(ctx context.Context, in *ProvisionerApply_Request, opts ...grpc.CallOption) (Provisioner_ApplyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Provisioner_serviceDesc.Streams[0], c.cc, "/proto.Provisioner/Apply", opts...)
	if err != nil {
		return nil, err
	}
	x := &provisionerApplyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Provisioner_ApplyClient interface {
	Recv() (*ProvisionerApply_Response, error)
	grpc.ClientStream
}

type provisionerApplyClient struct {
	grpc.ClientStream
}

func (x *provisionerApplyClient) Recv() (*ProvisionerApply_Response, error) {
	m := new(ProvisionerApply_Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *provisionerClient) Stop(ctx context.Context, in *Stop_Request, opts ...grpc.CallOption) (*Stop_Response, error) {
	out := new(Stop_Response)
	err := grpc.Invoke(ctx, "/proto.Provisioner/Stop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Provisioner service

type ProvisionerServer interface {
	ValidateProvisionerConfig(context.Context, *ValidateProvisionerConfig_Request) (*ValidateProvisionerConfig_Response, error)
	Apply(*ProvisionerApply_Request, Provisioner_ApplyServer) error
	Stop(context.Context, *Stop_Request) (*Stop_Response, error)
}

func RegisterProvisionerServer(s *grpc.Server, srv ProvisionerServer) {
	s.RegisterService(&_Provisioner_serviceDesc, srv)
}

func _Provisioner_ValidateProvisionerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateProvisionerConfig_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvisionerServer).ValidateProvisionerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provisioner/ValidateProvisionerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvisionerServer).ValidateProvisionerConfig(ctx, req.(*ValidateProvisionerConfig_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provisioner_Apply_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProvisionerApply_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProvisionerServer).Apply(m, &provisionerApplyServer{stream})
}

type Provisioner_ApplyServer interface {
	Send(*ProvisionerApply_Response) error
	grpc.ServerStream
}

type provisionerApplyServer struct {
	grpc.ServerStream
}

func (x *provisionerApplyServer) Send(m *ProvisionerApply_Response) error {
	return x.ServerStream.SendMsg(m)
}

func _Provisioner_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stop_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvisionerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Provisioner/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvisionerServer).Stop(ctx, req.(*Stop_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provisioner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Provisioner",
	HandlerType: (*ProvisionerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateProvisionerConfig",
			Handler:    _Provisioner_ValidateProvisionerConfig_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Provisioner_Stop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Apply",
			Handler:       _Provisioner_Apply_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "plugin.proto",
}

func init() { proto1.RegisterFile("plugin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1639 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcf, 0x6f, 0x1b, 0xc5,
	0x17, 0xef, 0xda, 0x71, 0x62, 0x3f, 0x3b, 0x89, 0x33, 0x89, 0xf2, 0x75, 0xb7, 0xfd, 0x7e, 0xbf,
	0xc1, 0x05, 0x9a, 0xd2, 0x36, 0x94, 0x04, 0x55, 0x55, 0xa1, 0x6a, 0xd3, 0x26, 0x4a, 0x2d, 0xd2,
	0x34, 0x1a, 0x87, 0x20, 0x7e, 0x08, 0x77, 0xe2, 0x9d, 0xba, 0x4b, 0xd7, 0xbb, 0x9b, 0xd9, 0x71,
	0xd2, 0xdc, 0x38, 0x71, 0x47, 0xe2, 0x82, 0xc4, 0x95, 0x0b, 0x37, 0x0e, 0x1c, 0xb9, 0x00, 0x12,
	0x12, 0x17, 0xc4, 0x81, 0x13, 0x27, 0x90, 0xb8, 0x71, 0xe4, 0x0f, 0x40, 0x33, 0x3b, 0xbb, 0x3b,
	0xb6, 0xd7, 0x4e, 0xb0, 0xaa, 0xf6, 0x94, 0x9d, 0xf7, 0x3e, 0xf3, 0x7e, 0xcc, 0xe7, 0xcd, 0xbc,
	0xe7, 0x40, 0xc9, 0x77, 0x3a, 0x2d, 0xdb, 0x5d, 0xf2, 0x99, 0xc7, 0x3d, 0x94, 0x93, 0x7f, 0xaa,
	0x6f, 0x42, 0x69, 0xed, 0xc8, 0x25, 0x6d, 0xbb, 0xb9, 0x4b, 0x9c, 0x0e, 0x45, 0x15, 0x98, 0x68,
	0x07, 0x2d, 0x9f, 0x34, 0x1f, 0x57, 0x8c, 0x05, 0x63, 0xb1, 0x84, 0xa3, 0x25, 0x42, 0x30, 0xf6,
	0x51, 0xe0, 0xb9, 0x95, 0x8c, 0x14, 0xcb, 0xef, 0xea, 0xcf, 0x06, 0xc0, 0x9a, 0x4d, 0x5a, 0xae,
	0x17, 0x70, 0xbb, 0x89, 0x2e, 0x43, 0xce, 0xa1, 0x07, 0xd4, 0x91, 0x5b, 0xa7, 0x96, 0xff, 0x13,
	0xba, 0x5a, 0x4a, 0x10, 0x4b, 0x9b, 0x42, 0x8d, 0x43, 0x94, 0xf0, 0x15, 0x74, 0xda, 0x6d, 0xc2,
	0x8e, 0xa4, 0xd1, 0x02, 0x8e, 0x96, 0x68, 0x1e, 0xc6, 0x2d, 0xca, 0x89, 0xed, 0x54, 0xb2, 0x52,
	0xa1, 0x56, 0x68, 0x19, 0x0a, 0x84, 0x73, 0x66, 0xef, 0x75, 0x38, 0xad, 0x8c, 0x2d, 0x18, 0x8b,
	0xc5, 0xe5, 0x39, 0xe5, 0x64, 0x35, 0x92, 0x6f, 0x13, 0xfe, 0x08, 0x27, 0xb0, 0xea, 0x25, 0xc8,
	0x49, 0xaf, 0xa8, 0x08, 0x13, 0xb5, 0xad, 0xdd, 0xd5, 0xcd, 0xda, 0x5a, 0xf9, 0x14, 0x2a, 0x40,
	0x6e, 0x1d, 0xe3, 0xfb, 0xb8, 0x6c, 0x08, 0xf9, 0x3b, 0xab, 0x78, 0xab, 0xb6, 0xb5, 0x51, 0xce,
	0x54, 0xbf, 0x31, 0x60, 0xb2, 0xcb, 0x14, 0x7a, 0x15, 0x72, 0x01, 0xa7, 0x7e, 0x50, 0x31, 0x16,
	0xb2, 0x8b, 0xc5, 0xe5, 0xd3, 0x69, 0xfe, 0x96, 0xea, 0x9c, 0xfa, 0x38, 0xc4, 0x99, 0x01, 0x8c,
	0x89, 0x25, 0x3a, 0x0f, 0x53, 0x71, 0x14, 0x0d, 0x97, 0xb4, 0xa9, 0x3c, 0x96, 0xc2, 0xdd, 0x53,
	0x78, 0x32, 0x96, 0x6f, 0x91, 0x36, 0x45, 0x57, 0xa1, 0x48, 0x1d, 0xda, 0xa6, 0x2e, 0x6f, 0x3c,
	0xa6, 0xe1, 0x59, 0x14, 0x97, 0x67, 0xa3, 0xc3, 0xd3, 0xd8, 0xb9, 0x7b, 0x0a, 0x83, 0x42, 0xbe,
	0x45, 0x8f, 0x6e, 0x03, 0xe4, 0x03, 0xea, 0xd0, 0x26, 0xf7, 0x58, 0x75, 0x45, 0x38, 0xf5, 0x7c,
	0xb3, 0x00, 0x13, 0x98, 0xee, 0x77, 0x68, 0xc0, 0xcd, 0x05, 0xc8, 0x63, 0x1a, 0xf8, 0x9e, 0x1b,
	0x50, 0x34, 0x07, 0xb9, 0x75, 0xc6, 0x3c, 0x16, 0x86, 0x80, 0xc3, 0x45, 0xf5, 0xd7, 0x3c, 0x14,
	0x36, 0x28, 0xaf, 0x37, 0x1f, 0xd1, 0x36, 0xd1, 0xb7, 0xfe, 0x68, 0x40, 0x21, 0x4e, 0x50, 0x30,
	0x9f, 0x84, 0x8f, 0xe5, 0xb7, 0x90, 0xf1, 0x23, 0x9f, 0x46, 0xd5, 0x20, 0xbe, 0xd1, 0x02, 0x14,
	0x2d, 0x1a, 0x34, 0x99, 0xed, 0x73, 0xdb, 0x73, 0x15, 0x75, 0xba, 0x08, 0x99, 0x90, 0x67, 0x74,
	0xbf, 0x63, 0x33, 0x6a, 0x49, 0xfa, 0xf2, 0x38, 0x5e, 0x0b, 0x9d, 0x27, 0x51, 0xc4, 0xa9, 0xe4,
	0x42, 0x5d, 0xb4, 0x16, 0xba, 0xa6, 0xd7, 0xf6, 0x3b, 0x9c, 0x5a, 0x95, 0xf1, 0x50, 0x17, 0xad,
	0xd1, 0x59, 0x28, 0x04, 0xd4, 0x0d, 0x6c, 0x6e, 0x1f, 0xd0, 0xca, 0x84, 0x54, 0x26, 0x02, 0xf3,
	0x0b, 0x03, 0x72, 0xb7, 0x1d, 0xaf, 0xf9, 0x58, 0x54, 0xdb, 0x01, 0x65, 0x81, 0x88, 0x4c, 0x24,
	0x92, 0xc5, 0xd1, 0x12, 0x5d, 0x07, 0x88, 0x09, 0x09, 0x2a, 0x19, 0x49, 0xb3, 0xa9, 0x8e, 0x3f,
	0x3e, 0x9e, 0x84, 0x70, 0xac, 0xa1, 0xd1, 0x0d, 0x28, 0xee, 0x09, 0xf3, 0x0d, 0x71, 0x02, 0x41,
	0x25, 0x2b, 0x37, 0x9f, 0xed, 0xdb, 0xbc, 0x45, 0x03, 0x4e, 0x2d, 0x19, 0x08, 0x06, 0xb9, 0x61,
	0x47, 0xe0, 0xcd, 0x9f, 0x0c, 0x28, 0x6a, 0x3a, 0x74, 0x06, 0x0a, 0xc2, 0x90, 0x56, 0x2e, 0x38,
	0x2f, 0x04, 0xb2, 0x4e, 0x2e, 0x41, 0x4e, 0x6e, 0x55, 0x15, 0x32, 0xdf, 0xe7, 0x25, 0xb4, 0x1f,
	0x82, 0xd0, 0x55, 0x98, 0x70, 0x69, 0xc0, 0x6d, 0xb7, 0x25, 0x99, 0x98, 0x1a, 0x10, 0x95, 0xed,
	0xb6, 0xee, 0x79, 0x16, 0xc5, 0x11, 0x58, 0x84, 0xd0, 0xb6, 0xdd, 0x86, 0xcd, 0x69, 0x3b, 0x90,
	0x24, 0x65, 0x71, 0xbe, 0x6d, 0xbb, 0x35, 0xb1, 0x96, 0x4a, 0xf2, 0x44, 0x29, 0x73, 0x4a, 0x49,
	0x9e, 0x48, 0xa5, 0xf9, 0x5d, 0x56, 0xab, 0xb8, 0x9b, 0x30, 0xed, 0x33, 0xef, 0xc0, 0xb6, 0x28,
	0x6b, 0x04, 0xd2, 0x9d, 0xcc, 0x67, 0x70, 0xd8, 0x53, 0x11, 0x3c, 0x94, 0xa2, 0x77, 0xa1, 0xcc,
	0x68, 0xe0, 0x75, 0x58, 0x93, 0x2a, 0x03, 0x11, 0x37, 0x4b, 0x7d, 0x16, 0x22, 0xaf, 0xe2, 0x43,
	0xee, 0x08, 0xe5, 0xc1, 0xba, 0xcb, 0xd9, 0x11, 0x9e, 0x66, 0xdd, 0x52, 0xf4, 0x00, 0x66, 0x2d,
	0xc2, 0x49, 0xa3, 0xc7, 0x7a, 0x48, 0xde, 0x95, 0xc1, 0xd6, 0xd7, 0x08, 0x27, 0xf5, 0x7e, 0xfb,
	0x33, 0x56, 0xaf, 0xdc, 0x7c, 0x0f, 0xe6, 0xd2, 0x42, 0x41, 0x65, 0xc8, 0x8a, 0x2b, 0x1e, 0x32,
	0x2b, 0x3e, 0x05, 0xa9, 0x07, 0xe2, 0x6e, 0x1f, 0x47, 0xaa, 0x04, 0x5d, 0xcf, 0x5c, 0x33, 0xcc,
	0x0f, 0x60, 0x3e, 0x3d, 0x90, 0xa7, 0x61, 0xbd, 0x7a, 0x3b, 0x2c, 0x48, 0x55, 0x16, 0xdd, 0x8f,
	0x26, 0xc0, 0x78, 0xbd, 0xb6, 0xb5, 0xb1, 0xb9, 0x5e, 0x36, 0x50, 0x1e, 0xc6, 0x36, 0x6b, 0xf5,
	0x9d, 0x72, 0x06, 0x4d, 0x40, 0xb6, 0xbe, 0xbe, 0x53, 0xce, 0x8a, 0x8f, 0x7b, 0xab, 0xdb, 0xe5,
	0xb1, 0xea, 0xa7, 0x06, 0xcc, 0xef, 0x12, 0xc7, 0xb6, 0x08, 0xa7, 0xdb, 0x8a, 0xd5, 0x3b, 0x9e,
	0xfb, 0xd0, 0x6e, 0x99, 0x57, 0xe3, 0x47, 0x06, 0x5d, 0x84, 0xf1, 0xa6, 0x14, 0xaa, 0xc2, 0x48,
	0x7b, 0xf1, 0xb0, 0x82, 0x98, 0x37, 0xb5, 0xd2, 0x5a, 0x81, 0xa2, 0x15, 0xb7, 0x94, 0xa0, 0x32,
	0x2d, 0x69, 0x9b, 0xe9, 0x6b, 0x36, 0x58, 0x47, 0x55, 0xbf, 0x37, 0xc0, 0x8c, 0x62, 0x8a, 0xa8,
	0x11, 0x77, 0x50, 0xc5, 0x65, 0x25, 0x71, 0x5d, 0x02, 0x14, 0x17, 0x5e, 0xef, 0x65, 0x8c, 0x4b,
	0x72, 0x27, 0xba, 0x94, 0x49, 0x16, 0x99, 0x67, 0x90, 0xc5, 0xb7, 0x06, 0x54, 0xa2, 0x2c, 0x92,
	0x22, 0x50, 0x39, 0x3c, 0x48, 0x72, 0x58, 0x84, 0xb2, 0x5e, 0xe1, 0x5a, 0x06, 0x53, 0x49, 0xb1,
	0x3e, 0x87, 0xf8, 0xbf, 0x36, 0xa0, 0x10, 0x46, 0xdb, 0x61, 0xd4, 0x6c, 0xea, 0xc5, 0x30, 0xc3,
	0x29, 0x63, 0xe4, 0xa1, 0xc7, 0xda, 0x0d, 0xfd, 0x9d, 0x2e, 0xe0, 0x72, 0xac, 0xd8, 0x55, 0x0f,
	0xf6, 0xb3, 0x8d, 0xf9, 0x6f, 0x03, 0x4a, 0x98, 0x12, 0x2b, 0xaa, 0x1a, 0x73, 0x7f, 0xd4, 0x5a,
	0xb9, 0x06, 0x93, 0xcd, 0x0e, 0x63, 0xa2, 0xd1, 0x07, 0x9c, 0x70, 0x3a, 0x2c, 0xfc, 0x92, 0x42,
	0xd6, 0x05, 0xd0, 0xdc, 0xd7, 0x92, 0xb8, 0x02, 0x05, 0x97, 0x1e, 0x2a, 0x0b, 0x43, 0xae, 0x4e,
	0xde, 0xa5, 0x87, 0x72, 0xf7, 0x68, 0x69, 0xff, 0x9e, 0x05, 0xb4, 0xed, 0x10, 0x37, 0x4a, 0xfb,
	0xce, 0x23, 0xe2, 0xb6, 0xa8, 0xf9, 0x9b, 0x31, 0x6a, 0xf6, 0xaf, 0x43, 0xd1, 0x67, 0xb6, 0xc7,
	0x8e, 0xcf, 0x1d, 0x24, 0x2e, 0x8c, 0x7d, 0x15, 0x90, 0xcf, 0x3c, 0xdf, 0x0b, 0xa8, 0xd5, 0x48,
	0xd2, 0xce, 0x0e, 0xde, 0x5c, 0x8e, 0xe0, 0x5b, 0x51, 0xfa, 0x17, 0x20, 0x47, 0x9f, 0x70, 0x46,
	0xd4, 0xc4, 0x98, 0xba, 0x2b, 0x44, 0x98, 0x7f, 0x19, 0x5d, 0x2d, 0x6c, 0xc6, 0x77, 0x88, 0xeb,
	0x76, 0x79, 0x1e, 0x72, 0xe0, 0xd3, 0x0a, 0x1d, 0x3b, 0xbe, 0x29, 0x5a, 0x98, 0x1c, 0x6f, 0x82,
	0x06, 0xa3, 0xbe, 0x43, 0x9a, 0x54, 0xb5, 0xb0, 0xf4, 0xa9, 0x75, 0x3a, 0x42, 0xe3, 0x10, 0x9c,
	0x44, 0x9e, 0x3d, 0x2e, 0xf2, 0x5e, 0x8e, 0xc7, 0x4e, 0xc4, 0xf1, 0x9f, 0x59, 0x98, 0x5d, 0xf5,
	0x7d, 0xe7, 0xa8, 0x87, 0xe4, 0x1f, 0x9e, 0x31, 0xc9, 0xa9, 0x27, 0x9d, 0xfd, 0x17, 0x27, 0x3d,
	0xa7, 0x53, 0x5c, 0x8a, 0xd8, 0xfc, 0x24, 0xa3, 0xb1, 0x79, 0xa6, 0xf7, 0xda, 0x94, 0xb4, 0x1b,
	0x12, 0xef, 0xcf, 0x68, 0xfb, 0x51, 0x1d, 0xa0, 0xe9, 0xb9, 0x2e, 0x6d, 0xaa, 0x79, 0x56, 0x1c,
	0xe9, 0x4a, 0xc4, 0x5c, 0xff, 0xb1, 0x25, 0x83, 0xc2, 0x9d, 0x78, 0x57, 0x38, 0x21, 0x68, 0x66,
	0x46, 0x22, 0xca, 0xbc, 0x01, 0xd3, 0x3d, 0x36, 0x53, 0x9a, 0xfd, 0x9c, 0xde, 0xec, 0x0b, 0x7a,
	0x53, 0xff, 0xc5, 0x80, 0xd9, 0x5a, 0xdb, 0xf7, 0x18, 0x8f, 0xa7, 0x12, 0xf9, 0xac, 0x6c, 0x8c,
	0x4a, 0xf3, 0x14, 0x64, 0x6c, 0x4b, 0xf9, 0xc9, 0xd8, 0xd6, 0xe0, 0xf7, 0x29, 0x33, 0xc2, 0xfb,
	0x94, 0x3d, 0x51, 0xed, 0xfe, 0x61, 0xc0, 0x94, 0x78, 0x96, 0x93, 0x36, 0x68, 0xee, 0x8d, 0xd2,
	0x00, 0x2f, 0xc3, 0x04, 0x0b, 0x37, 0x0d, 0x0b, 0x36, 0xc2, 0x98, 0x8e, 0x96, 0xe9, 0x45, 0x18,
	0x67, 0x34, 0xe8, 0x38, 0x7c, 0xe8, 0x04, 0x13, 0x42, 0x46, 0x4b, 0xf2, 0xcb, 0x0c, 0xcc, 0xbd,
	0xed, 0xb7, 0x18, 0xb1, 0x68, 0x37, 0x73, 0x9f, 0x8f, 0x7c, 0x43, 0xcf, 0xc1, 0x64, 0x78, 0x43,
	0xa3, 0x2e, 0x2b, 0xb2, 0x1e, 0xc3, 0x25, 0x29, 0x8c, 0x3a, 0xec, 0x1b, 0x62, 0x7a, 0x8f, 0xaf,
	0x71, 0x83, 0x91, 0xc3, 0x61, 0xd7, 0x71, 0x32, 0xb9, 0xca, 0x98, 0x1c, 0x3e, 0xdd, 0x66, 0x95,
	0x39, 0xd1, 0x39, 0x7d, 0x66, 0xc0, 0xe9, 0xae, 0x89, 0x53, 0x64, 0xf1, 0xfc, 0x87, 0x4e, 0x17,
	0xca, 0x5a, 0x34, 0xf2, 0xc9, 0x18, 0x39, 0x98, 0xaa, 0x16, 0xcc, 0x3c, 0x8c, 0x7b, 0x1d, 0xee,
	0x77, 0xb8, 0x62, 0x59, 0xad, 0x96, 0xbf, 0xca, 0x43, 0x3e, 0x1a, 0xb8, 0xd1, 0x2d, 0xed, 0xc7,
	0x3d, 0xaa, 0xa4, 0xfc, 0xaa, 0x09, 0x0b, 0xfa, 0xf4, 0xc0, 0xdf, 0x3b, 0xa8, 0x35, 0x68, 0x8c,
	0x47, 0x2f, 0xa9, 0x4d, 0xe9, 0xea, 0xd8, 0xf6, 0xcb, 0xc7, 0xc1, 0x94, 0xa3, 0x60, 0xd8, 0x6c,
	0x8e, 0x2e, 0xf4, 0x58, 0xe9, 0x87, 0xc4, 0x0e, 0x5f, 0x39, 0x09, 0x54, 0x39, 0x6d, 0x0f, 0x1e,
	0xa5, 0xd1, 0xf9, 0x1e, 0x3b, 0xbd, 0x80, 0xd8, 0xe1, 0xe2, 0xf1, 0x40, 0xe5, 0x8e, 0xa4, 0xdf,
	0x64, 0x74, 0x4e, 0x59, 0x48, 0x53, 0xc6, 0x6e, 0x5e, 0x1c, 0x0e, 0x52, 0x2e, 0x6e, 0x69, 0xc3,
	0x75, 0xcc, 0x78, 0x2c, 0xe9, 0x63, 0x5c, 0xd7, 0x28, 0x0b, 0xb5, 0xee, 0x51, 0x17, 0x9d, 0x51,
	0x50, 0x5d, 0x18, 0xdb, 0x39, 0x9b, 0xae, 0x54, 0xa6, 0xde, 0x4f, 0x1b, 0x1f, 0xd1, 0x0b, 0x6a,
	0x4f, 0xbf, 0x2a, 0x36, 0x5b, 0x1d, 0x06, 0x51, 0xc6, 0x3f, 0x4c, 0x9d, 0x5b, 0x50, 0x75, 0x68,
	0x73, 0x0e, 0xcd, 0x9f, 0x3b, 0x41, 0x03, 0x17, 0xf6, 0x53, 0xfa, 0x65, 0x6c, 0x3f, 0x45, 0xd7,
	0x67, 0x3f, 0x1d, 0xa3, 0xec, 0xdf, 0xef, 0xed, 0x5d, 0xe8, 0xbf, 0xda, 0x61, 0x26, 0xe2, 0xd8,
	0xea, 0xff, 0x06, 0xa9, 0x95, 0xc1, 0xd7, 0xc2, 0xff, 0xff, 0xa1, 0xe8, 0x09, 0x11, 0x8b, 0x78,
	0xf3, 0x5c, 0xb7, 0x30, 0xdc, 0xb2, 0xfc, 0x71, 0x06, 0x8a, 0xda, 0xeb, 0x84, 0xfc, 0x21, 0x4f,
	0x28, 0x5a, 0x4c, 0xbb, 0xc9, 0x3a, 0x22, 0x76, 0x76, 0xe1, 0x04, 0x48, 0x15, 0xf4, 0x26, 0xe4,
	0x24, 0x0b, 0xe8, 0xff, 0x11, 0xe5, 0x3d, 0x8f, 0x65, 0x6c, 0x74, 0x61, 0x30, 0x20, 0xb4, 0x75,
	0xc5, 0x18, 0xe1, 0x08, 0xf6, 0xc6, 0xa5, 0x70, 0xe5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42,
	0x17, 0x30, 0x49, 0x1b, 0x17, 0x00, 0x00,
}
